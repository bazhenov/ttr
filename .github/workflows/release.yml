name: Release

permissions:
  contents: write

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          draft: true
          prerelease: true

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
        - target: x86_64-apple-darwin
          os: macos-11
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-20.04
    runs-on: ${{ matrix.os}}
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      run: rustup update stable && rustup default stable

    - name: Build Release
      run: |
        echo "RELEASE_FQN=${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}" >> $GITHUB_ENV
        mkdir release
        cargo install --path=. --locked --root=release

    - name: Create Release Archive
      run: |
        mkdir ${{ env.RELEASE_FQN }}
        cp -r release/bin ${{ env.RELEASE_FQN }}/bin
        cp README.md ${{ env.RELEASE_FQN }}
        tar -czvf ${{ env.RELEASE_FQN }}.tar.gz ${{ env.RELEASE_FQN }}
        rm -rf ${{ env.RELEASE_FQN }}

    - name: Release SHA256 checksum
      run: |
        shasum -a 256 ${{ env.RELEASE_FQN }}.tar.gz
        
    - name: Create .deb release
      if: matrix.os == 'ubuntu-20.04'
      run: |
        mkdir -p ${{ env.RELEASE_FQN }}/usr/local
        mkdir -p ${{ env.RELEASE_FQN }}/DEBIAN
        cp -r release/bin ${{ env.RELEASE_FQN }}/usr/local
        cat deb/control | sed 's/__VERSION__/0.1.0/' > ${{ env.RELEASE_FQN }}/DEBIAN/control
        dpkg-deb --build --root-owner-group ${{ env.RELEASE_FQN }}
        rm -rf ${{ env.RELEASE_FQN }}

    - name: Upload release archive
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_FQN }}.tar.gz
        asset_name: ${{ env.RELEASE_FQN }}.tar.gz
        asset_content_type: application/octet-stream
    
    - name: Upload .deb release archive
      if: matrix.os == 'ubuntu-20.04'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_FQN }}.deb
        asset_name: ${{ env.RELEASE_FQN }}.deb
        asset_content_type: application/octet-stream
